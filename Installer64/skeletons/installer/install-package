#!/usr/bin/env bash
# Template: 2.0.0
#######################################
# Installer64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/installer64
# Version: 1.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Base Installer64 parameters
export INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64/bashlib64.bash}"
export INST64_DEBUG="${INST64_DEBUG:-}"
export INST64_INSTALLER_ROOT="${INST64_INSTALLER_ROOT:-/opt/installer64}"
export INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
export INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
export INST64_OPT_ROOT="${INST64_OPT_ROOT:-/opt}"
export INST64_TMP="${INST64_TMP:-/tmp}"

# shellcheck source=SCRIPTDIR/../lib/bashlib64.bash
source "$INST64_BASHLIB64" || { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

# X_CODE_PLACEHOLDER_1_X

#
# Globals
#

# X_CODE_PLACEHOLDER_2_X
export INST64_X_APP_NAME_CAPS_X_PACKAGES=''

#
# Functions
#

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_X_APP_NAME_X_install() {
  bl64_dbg_app_show_function
  inst64_X_APP_NAME_X_select_packages || return $?
  # X_CODE_PLACEHOLDER_3_X
}

#######################################
# Select installation packages and related information
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package name list
# Returns:
#   0: selection ok
#   >0: selection failed
#######################################
function inst64_X_APP_NAME_X_select_packages() {
  bl64_dbg_app_show_function
  # X_CODE_PLACEHOLDER_8_X
  [[ -z "$INST64_X_APP_NAME_CAPS_X_PACKAGES" ]] && bl64_msg_show_error 'unable to determine package name' && return 1
  return 0
}

#######################################
# Prepare installation
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Preparation progress and errors
# Returns:
#   0: preparation ok
#   >0: preparation failed
#######################################
function inst64_X_APP_NAME_X_prepare() {
  bl64_dbg_app_show_function
  bl64_msg_show_task 'prepare deployment'
  # X_CODE_PLACEHOLDER_6_X
}

#######################################
# Verify installation
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Verification progress and errors
# Returns:
#   0: verification ok
#   >0: verification failed
#######################################
function inst64_X_APP_NAME_X_verify() {
  bl64_dbg_app_show_function
  bl64_msg_show_task 'verify deployment'
  # X_CODE_PLACEHOLDER_7_X
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: initialization failed
#######################################
function inst64_X_APP_NAME_X_initialize() {
  bl64_dbg_app_show_function
  # X_CODE_PLACEHOLDER_4_X
}

#
# Main
#

declare inst64_X_APP_NAME_X_installer_description='Install application: X_APP_FULL_NAME_X'

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$inst64_X_APP_NAME_X_installer_description"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_all_enable
inst64_X_APP_NAME_X_initialize &&
  inst64_X_APP_NAME_X_prepare &&
  inst64_X_APP_NAME_X_install &&
  inst64_X_APP_NAME_X_verify
# X_CODE_PLACEHOLDER_5_X
bl64_msg_show_batch_finish $? "$inst64_X_APP_NAME_X_installer_description"
